parameters:
  method: ''

jobs:
  - job: ${{ parameters.method }}
    pool:
      vmImage: 'ubuntu-18.04'
    timeoutInMinutes: 0     # 360 minutes
    strategy:
      matrix:
        AVX_enabled:
          COMPlus_EnableAVX: 1
          COMPlus_EnableSSE: 1
        AVX_disabled:
          COMPlus_EnableAVX: 0
        SSE_disabled:
          COMPlus_EnableSSE: 0
    steps:
      - task: UseDotNet@2
        displayName: 'Use dotnet sdk 3.x'
        inputs:
          version: $(SDK_VERSION)
          includePreviewVersions: true
      
      - bash: |
          cd fuzz
          chmod +x *.sh
          sudo ./init-system.sh
        displayName: pre-requisites
      
      - bash: |
          cd fuzz
          ./setup.sh
        displayName: setup

      - bash: |
          cd fuzz
          ./init.sh
        displayName: init

      - bash: |
          if [[ "$COMPLUS_ENABLEAVX" == "0" ]]; then
              export COMPlus_EnableAVX=0
          fi

          if [[ "$COMPLUS_ENABLESSE" == "0" ]]; then
              export COMPlus_EnableSSE=0
          fi

          cd fuzz
          ./run.sh $(TIMEOUT) ${{ parameters.method }}
        displayName: run          

      - task: PublishBuildArtifacts@1
        condition: failed()
        inputs:
          pathtoPublish: 'fuzz/findings/crashes'
          artifactName: '${{ parameters.method }}'
