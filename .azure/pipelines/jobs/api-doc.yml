parameters:
  dependsOn: ''

jobs:
  - job: 'api_doc_build'
    dependsOn:
      - ${{ parameters.dependsOn }}
    pool:
      vmImage: 'windows-2019'
    steps:
      - bash: |
          export PATH="$(pwd)/dotnet:$PATH"
          echo 'installed sdks:'
          dotnet --list-sdks
          echo "-------------------------------------------------"

          chmod u+x ./build.sh
          ./build.sh build
        displayName: 'build'

      - powershell: |
          choco install docfx -y

          if ($lastexitcode -ne 0) {
              throw ("Error generating document")
          }
        displayName: 'install docfx'

      - powershell: |
          cd api-doc
          docfx

          if ($lastexitcode -ne 0) {
              throw ("Error generating document")
          }
        displayName: 'docfx build'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'api-doc/_site'
          artifactName: 'doc-site'

  - job: 'api_doc_publish'
    dependsOn:
      - 'api_doc_build'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      GH_USER: gfoidl
      GH_EMAIL: $(GITHUB_EMAIL)
    steps:
      - checkout: self
        persistCredentials: true

      - bash: |
          git config user.name $GH_USER
          git config user.email $GH_EMAIL
        displayName: '[git] Configure User'

      - bash: git checkout gh-pages
        displayName: '[git] Set development branch'

      - bash: git rm -rf .
        displayName: '[git] Clean working dir'

      - task: DownloadPipelineArtifact@2
        inputs:
          artifactName: 'doc-site'
          targetPath: './'

      - bash: |
          git add --all
          git commit -m "Pipelines-Bot: Updated site via $(Build.SourceVersion)"
          echo ""
          git log --oneline
        displayName: '[git] Creating commit'

      - bash: 'git push origin gh-pages'
        displayName: '[git] Push changes to remote'
