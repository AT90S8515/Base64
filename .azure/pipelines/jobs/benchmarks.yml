parameters:
  name: ''
  vmImage: ''
  dependsOn: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: '${{ parameters.name }} build and test'
    dependsOn:
      - ${{ parameters.dependsOn }}
    condition: and( succeeded(), eq( variables['Build.SourceBranch'], 'refs/heads/master' ) )
    pool:
      vmImage: ${{ parameters.vmImage }}
    steps:
      - task: DotNetCoreInstaller@0
        inputs:
          packageType: sdk
          version: 3.0.100-preview-009765

      - bash: |
          cd perf/gfoidl.Base64.Benchmarks
          dotnet build -c Release
          cd bin/Release/netcoreapp3.0
          dotnet gfoidl.Base64.Benchmarks.dll --list tree
          dotnet gfoidl.Base64.Benchmarks.dll -f *Base64EncoderBenchmarks*
          dotnet gfoidl.Base64.Benchmarks.dll -f *Base64UrlEncoderBenchmarks*
          dotnet gfoidl.Base64.Benchmarks.dll -f *DecodeStringBenchmark*
          dotnet gfoidl.Base64.Benchmarks.dll -f *DecodeUtf8Benchmark*
          dotnet gfoidl.Base64.Benchmarks.dll -f *EncodeStringBenchmark*
          dotnet gfoidl.Base64.Benchmarks.dll -f *EncodeUtf8Benchmark*

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: 'perf/gfoidl.Base64.Benchmarks/bin/Release/netcoreapp3.0/BenchmarkDotNet.Artifacts/results'
          artifactName: '${{ parameters.name }}'
